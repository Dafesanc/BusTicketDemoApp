// <auto-generated />
using System;
using BusTicketDemoApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BusTicketDemoApp.Migrations
{
    [DbContext(typeof(BusTicketDbContext))]
    partial class BusTicketDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BusTicketDemoApp.Models.BusBooking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CustId")
                        .HasColumnType("integer");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("integer");

                    b.HasKey("BookingId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("BusBookings");
                });

            modelBuilder.Entity("BusTicketDemoApp.Models.BusBookingPassenger", b =>
                {
                    b.Property<int>("PassengerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PassengerId"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<int>("BookingId")
                        .HasColumnType("integer");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("PassengerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("SeatNo")
                        .HasColumnType("integer");

                    b.HasKey("PassengerId");

                    b.HasIndex("BookingId", "SeatNo")
                        .IsUnique();

                    b.ToTable("BusBookingPassengers");
                });

            modelBuilder.Entity("BusTicketDemoApp.Models.BusLocation", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LocationId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("LocationId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("BusLocations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            Code = "CDMX",
                            LocationName = "Ciudad de México"
                        },
                        new
                        {
                            LocationId = 2,
                            Code = "GDL",
                            LocationName = "Guadalajara"
                        },
                        new
                        {
                            LocationId = 3,
                            Code = "MTY",
                            LocationName = "Monterrey"
                        },
                        new
                        {
                            LocationId = 4,
                            Code = "PUE",
                            LocationName = "Puebla"
                        },
                        new
                        {
                            LocationId = 5,
                            Code = "CUN",
                            LocationName = "Cancún"
                        });
                });

            modelBuilder.Entity("BusTicketDemoApp.Models.BusSchedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ScheduleId"));

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("BusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("BusVehicleNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FromLocation")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ToLocation")
                        .HasColumnType("integer");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("integer");

                    b.Property<int>("VendorId")
                        .HasColumnType("integer");

                    b.HasKey("ScheduleId");

                    b.HasIndex("FromLocation", "ToLocation", "ScheduleDate");

                    b.ToTable("BusSchedules");

                    b.HasData(
                        new
                        {
                            ScheduleId = 1,
                            ArrivalTime = new DateTime(2025, 6, 23, 14, 0, 0, 0, DateTimeKind.Utc),
                            BusName = "Express CDMX-GDL",
                            BusVehicleNo = "ADN-001",
                            DepartureTime = new DateTime(2025, 6, 23, 8, 0, 0, 0, DateTimeKind.Utc),
                            FromLocation = 1,
                            Price = 450.00m,
                            ScheduleDate = new DateTime(2025, 6, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            ToLocation = 2,
                            TotalSeats = 42,
                            VendorId = 1
                        },
                        new
                        {
                            ScheduleId = 2,
                            ArrivalTime = new DateTime(2025, 6, 23, 20, 0, 0, 0, DateTimeKind.Utc),
                            BusName = "Ejecutivo CDMX-MTY",
                            BusVehicleNo = "ADN-002",
                            DepartureTime = new DateTime(2025, 6, 23, 10, 0, 0, 0, DateTimeKind.Utc),
                            FromLocation = 1,
                            Price = 650.00m,
                            ScheduleDate = new DateTime(2025, 6, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            ToLocation = 3,
                            TotalSeats = 38,
                            VendorId = 1
                        },
                        new
                        {
                            ScheduleId = 3,
                            ArrivalTime = new DateTime(2025, 6, 24, 16, 0, 0, 0, DateTimeKind.Utc),
                            BusName = "Primera Plus GDL-CUN",
                            BusVehicleNo = "PP-101",
                            DepartureTime = new DateTime(2025, 6, 23, 22, 0, 0, 0, DateTimeKind.Utc),
                            FromLocation = 2,
                            Price = 980.00m,
                            ScheduleDate = new DateTime(2025, 6, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            ToLocation = 5,
                            TotalSeats = 40,
                            VendorId = 2
                        });
                });

            modelBuilder.Entity("BusTicketDemoApp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("UserId");

                    b.HasIndex("EmailId")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmailId = "admin@busticket.com",
                            FullName = "Administrador del Sistema",
                            Password = "admin123",
                            ProjectName = "BusTicketDemo",
                            Role = "Admin",
                            UserName = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmailId = "customer1@email.com",
                            FullName = "Juan Pérez",
                            Password = "customer123",
                            ProjectName = "BusTicketDemo",
                            Role = "Customer",
                            UserName = "customer1"
                        },
                        new
                        {
                            UserId = 3,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmailId = "vendor1@email.com",
                            FullName = "María González",
                            Password = "vendor123",
                            ProjectName = "BusTicketDemo",
                            Role = "Vendor",
                            UserName = "vendor1"
                        });
                });

            modelBuilder.Entity("BusTicketDemoApp.Models.Vendor", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VendorId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("VendorId");

                    b.ToTable("Vendors");

                    b.HasData(
                        new
                        {
                            VendorId = 1,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "info@autobusdelnorte.com",
                            Phone = "+52-55-1234-5678",
                            VendorName = "Autobuses del Norte"
                        },
                        new
                        {
                            VendorId = 2,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "contacto@primeraplus.com",
                            Phone = "+52-33-9876-5432",
                            VendorName = "Primera Plus"
                        });
                });

            modelBuilder.Entity("BusTicketDemoApp.Models.BusBooking", b =>
                {
                    b.HasOne("BusTicketDemoApp.Models.BusSchedule", "BusSchedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusSchedule");
                });

            modelBuilder.Entity("BusTicketDemoApp.Models.BusBookingPassenger", b =>
                {
                    b.HasOne("BusTicketDemoApp.Models.BusBooking", "BusBooking")
                        .WithMany("BusBookingPassengers")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusBooking");
                });

            modelBuilder.Entity("BusTicketDemoApp.Models.BusBooking", b =>
                {
                    b.Navigation("BusBookingPassengers");
                });
#pragma warning restore 612, 618
        }
    }
}
